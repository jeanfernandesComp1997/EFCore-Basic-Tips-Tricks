modelBuilder.ApplyConfiguration(new ClientConfiguration());

modelBuilder.Entity<Client>(p =>
{
    p.ToTable("Clients");
    p.HasKey(p => p.Id);
    p.Property(p => p.Name).HasColumnType("VARCHAR(80)").IsRequired();
    p.Property(p => p.Phone).HasColumnType("CHAR(11)");
    p.Property(p => p.CEP).HasColumnType("CHAR(8)").IsRequired();
    p.Property(p => p.State).HasColumnType("CHAR(2)").IsRequired();
    p.Property(p => p.City).HasMaxLength(60).IsRequired();

    p.HasIndex(i => i.Phone).HasDatabaseName("idx_client_phone");
});

modelBuilder.Entity<Product>(p =>
{
    p.ToTable("Products");
    p.HasKey(p => p.Id);
    p.Property(p => p.BarCode).HasColumnType("VARCHAR(14)").IsRequired();
    p.Property(p => p.Description).HasColumnType("VARCHAR(60)");
    p.Property(p => p.Value).IsRequired();
    p.Property(p => p.ProductType).HasConversion<string>();
});

modelBuilder.Entity<Order>(p =>
{
    p.ToTable("Orders");
    p.HasKey(p => p.Id);
    p.Property(p => p.CreatedAt).HasDefaultValueSql("GETDATE()").ValueGeneratedOnAdd();
    p.Property(p => p.Status).HasConversion<string>();
    p.Property(p => p.FreightType).HasConversion<int>();
    p.Property(p => p.Observation).HasColumnType("VARCHAR(512)");

    p.HasMany(p => p.Items)
    .WithOne(p => p.Order)
    .OnDelete(DeleteBehavior.Cascade);
});

modelBuilder.Entity<OrderItem>(p =>
{
    p.ToTable("OrderItems");
    p.HasKey(p => p.Id);
    p.Property(p => p.Quantity).HasDefaultValue(1).IsRequired();
    p.Property(p => p.Value).IsRequired();
    p.Property(p => p.Discount).IsRequired();
});